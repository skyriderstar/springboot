# spring boot应用的配置

# devtools 支持代码同步到远程服务器的密码设置
# spring.devtools.remote.secret=123456

# 监听端口配置
server.port=8080
# web应用上下文路径配置
#server.context-path=/springboot-demo



# mysql 连接配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# 连接池的配置信息
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# mybaits配置信息
#mybatis.type-aliases-package=com.example.domain.model
#mybatis.type-handlers-package=com.example.typehandler
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.default-fetch-size=100
#mybatis.configuration.default-statement-timeout=30



# 打开tomcat访问日志
server.tomcat.accesslog.enabled=false
# 访问日志所在的目录
server.tomcat.accesslog.directory=F:/
# 允许 HTTP 请求缓存到请求队列的最大个数, 默认不限制
server.tomcat.accept-count=100
# 最大连接数,默认不限制,如果连接数达到了上限,那么剩下的连接会保存到请求缓存队列里,也就是上面参数指定的个数
server.tomcat.max-connections=50
# 最大工作线程数
server.tomcat.max-threads=20
# HTTP POST 内容最大长度, 默认不限制
#server.tomcat.max-http-post-size=



# 配置打印日志的默认最小级别
logging.level.root=info
# 配置 org 包下打印日志的最小级别是 WARN
# org 包下的一般都是第三方的组件, 不需要打印 info 级别的日志
logging.level.org=warn
# 自己包下的日志, 从 debug 级别就开始打印
logging.level.com.kx=debug

# 日志文件默认在控制台打印
# 日志达到 10M 就会重新生成一个日志文件
# 相对路径, 应用目录下
logging.file=my.log
# 指定放在某个日志目录中
logging.path=F:/

# 对控制台和文件两个地方的日志分别定义格式
# %level 日志级别
# %date 日期时间
# %thread %t 线程名称
# %logger 输出 logger 的名字, 包名+类名, {n}限制了输出的长度,长度太长的话会压缩包名和类名
# %M 日志打印的方法名
# %L 打印日志所在的行, 性能消耗较大
# %m 日志消息
# %n 换行
logging.pattern.console=%level %date{yyyy-MM-hh HH:mm:ss.SSS} [%t] %logger{20}.%M %L :%m%n
logging.pattern.file=%level %date{ISO8601} [%thread] %logger{2000}.%M %L :%m%n
# DEBUG 2019-12-05 17:30:22.823 [main] com.kx.springboot.mapper.UserMapper.getUserById.debug 159 :<==      Total: 0
# DEBUG 2019-12-05 17:31:18.416 [main] c.k.s.m.U.getUserById.debug 159 :<==      Total: 0

# logback logback-spring.xml
# log4j log4j2-spring.xml
# java util logging logging.properties


# 自定义注解
my.hello=hello
# 随机值
my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.uuid=${random.uuid}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}

flyway.enabled=true
flyway.baseline-on-migrate=true
flyway.baseline-version=0
flyway.user=root
flyway.password=root
flyway.url=jdbc:mysql://localhost:3306/target
flyway.check-location=true
flyway.locations=classpath:db/migration/mysql